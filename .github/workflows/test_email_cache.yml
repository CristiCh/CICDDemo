name: iOS Test Email Cache

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - master
      - '**'
  schedule:
    - cron: '10 8 * * *'

jobs:
  cancel-previous:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ secrets.PAT_TOKEN }}

  test:
    needs: cancel-previous
    runs-on: macos-latest
    outputs:
      test_result: ${{ job.status }}
      start_time: ${{ steps.start_time.outputs.time }}

    steps:
      - name: Record start time
        id: start_time
        run: echo "time=$(date +%s)" >> "$GITHUB_OUTPUT"
      
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
      
      - name: Install Ruby dependencies
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.2

      - name: Install Bundler
        run: gem install bundler

      - name: Install gems
        run: bundle install
      
      # - name: Cache Ruby gems
      #   uses: actions/cache@v3
      #   with:
      #     path: vendor/bundle
      #     key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-gems-

      # - name: Install Ruby dependencies
      #   uses: ruby/setup-ruby@v1
      #   with:
      #     ruby-version: 3.2.2

      # - name: Install Bundler and Gems
      #   run: |
      #     gem install bundler
      #     bundle config set path 'vendor/bundle'
      #     bundle install

      - name: Cache CocoaPods pods
        uses: actions/cache@v3
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install CocoaPods
        run: |
          sudo gem install cocoapods
          pod install --verbose

      - name: Run tests with Fastlane
        run: bundle exec fastlane ios test

      - name: Take screenshots with Fastlane
        run: bundle exec fastlane screenshots

      - name: Upload Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Logs
          path: fastlane/logs

      - name: Upload Screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Screenshots
          path: fastlane/screenshots

      - name: Generate changelog
        run: |
          echo "## Changelog - $(date)" > changelog.md
          git log -n 20 --pretty=format:"- %h %s (%an)" >> changelog.md

      - name: Upload changelog artifact
        uses: actions/upload-artifact@v4
        with:
          name: Changelog
          path: fastlane/changelog.md

  notify:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Download changelog artifact
        uses: actions/download-artifact@v4
        with:
          name: ios-changelog
          path: .

      - name: Download screenshots artifact
        uses: actions/download-artifact@v4
        with:
          name: iOS Test Email Cache
          path: screenshots

      - name: Record current time as end time
        id: end_time
        run: echo "time=$(date +%s)" >> "$GITHUB_OUTPUT"

      - name: Calculate duration
        id: duration
        run: |
          start=${{ needs.test.outputs.start_time }}
          end=${{ steps.end_time.outputs.time }}
          duration=$((end - start))
          minutes=$((duration / 60))
          seconds=$((duration % 60))
          echo "duration=${minutes}m ${seconds}s" >> "$GITHUB_OUTPUT"

      - name: Send email notification with test result, changelog, and screenshots
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.GMAIL_USERNAME }}
          password: ${{ secrets.GMAIL_APP_PASSWORD }}
          subject: "${{ needs.test.outputs.test_result == 'success' && '✅' || '❌' }} iOS Test Workflow Completed"
          body: |
            ${{ needs.test.outputs.test_result == 'success' && '✅' || '❌' }} iOS Test Workflow Completed
            • **Status:** ${{ needs.test.outputs.test_result }}
            • **Duration:** ${{ steps.duration.outputs.duration }}
            • **Repository:** ${{ github.repository }}
            • **Event:** ${{ github.event_name }}
            • **Branch:** ${{ github.ref }}
            • **Commit SHA:** ${{ github.sha }}
            • **Workflow URL:** https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            -- GitHub Actions
          to: cristi.chertes@yahoo.com
          from: ${{ secrets.GMAIL_USERNAME }}
          secure: true
          attachments: |
            changelog.md
